%!!!Disclamer!!!
%Most of the code was generated by reading the matlab documentation from their website and some from course activity
%Matlab website: https://se.mathworks.com/?s_tid=gn_logo

%Create Dataset
clear, clc
setSize = 1000;
dataSet = zeros(setSize,3);%
dataSet(:,1)=rand(setSize,1)*0.7;% Mean Delay between 0 - 0.7
dataSet(:,2)=rand(setSize,1);% Number of servers between 0 - 1
dataSet(:,3)=rand(setSize,1);%  Utilisation Factor between 0 - 1
dataSet

%%
%Read FIS and create target set
sparePartsFis = readfis('mamdanitype'); 
targetSet = evalfis(sparePartsFis,dataSet)

%%
%Devide DataSet
trainTestSplit = 700;
indices = randperm(setSize);
trainInpSet = dataSet(indices(1:trainTestSplit),:);
trainTarSet = targetSet(indices(1:trainTestSplit),:);
testInpSet = dataSet(indices((trainTestSplit+1):end),:);
testTarSet = targetSet(indices((trainTestSplit+1):end),:);

trainSet = [trainInpSet trainTarSet]
testSet = [testInpSet testTarSet]

%%
%Train the neuro fuzzy system
opt = anfisOptions('InitialFis',3,'EpochNumber',300);
trainedFis = anfis(trainSet,opt);

%%
%Create Targets
trainedOutputs = evalfis(trainedFis, trainInpSet)
testOutputs = evalfis(trainedFis, testInpSet)

%% 
%Calculate MSE, RMSE, Mean and Standard Deviation
trainError =  trainTarSet - trainedOutputs;
trainMean = mean(trainError)
trainStd = std(trainError)
trainMSE=mean(trainError.^2)
trainRMSE=sqrt(trainMSE)

testError = testTarSet - testOutputs;
testMean = mean(testError)
testStd = std(testError)
testMSE=mean(testError.^2)
testRMSE=sqrt(testMSE)

%%
%Plot Compare Fis outputs and trained targets
scatter(trainedOutputs, trainTarSet);
hold on
scatter(testOutputs, testTarSet);
hold off
legend("Train", "Test")
figure()

%Plot between testTarget and testOutput
plotArray = (1:size(testOutputs)).';
size(trainedOutputs)
size(plotArray)
scatter(plotArray,testOutputs, "r")
hold on
scatter(plotArray,testTarSet, "b")
plot(plotArray,testOutputs, "r")
plot(plotArray,testTarSet, "b")
hold off
legend("Test Output", "Test Target")

%% 
tiledlayout(2,3)
nexttile
testOutside = [0.5, 0.5, 0.7;
    0.5, 0.5, 0.8;
    0.5, 0.5, 0.9;
    0.5, 0.5, 1.0;
    0.5, 0.5, 1.1;
    0.5, 0.5, 1.2];

fisTarget = evalfis(sparePartsFis,testOutside)
neuroFisTarget = evalfis(trainedFis,testOutside)
bar([fisTarget,neuroFisTarget]);
title("Neuro FIS Output vs FIS output")
xticklabels({'[0.5, 0.5, 0.7]','[0.5, 0.5, 0.8]','[0.5, 0.5, 0.9]','[0.5, 0.5, 1.0]','[0.5, 0.5, 1.1]','[0.5, 0.5, 1.2]'})
legend("FIS","NeuroFIS")

nexttile
testOutside = [0.5, 0.5, 0.5;
    0.6, 0.5, 0.5;
    0.7, 0.5, 0.5;
    0.8, 0.5, 0.5;
    0.9, 0.5, 0.5;
    1.0, 0.5, 0.5];

fisTarget1 = evalfis(sparePartsFis,testOutside)
neuroFisTarget1 = evalfis(trainedFis,testOutside)
bar([fisTarget1,neuroFisTarget1]);
title("Neuro FIS Output vs FIS output")
xticklabels({'[0.5, 0.5, 0.5]','[0.6, 0.5, 0.5]','[0.7, 0.5, 0.5]','[0.8, 0.5, 0.5]','[0.9, 0.5, 0.5]','[1.0, 0.5, 0.5]'})
legend("FIS","NeuroFIS")

nexttile
testOutside = [0.5, 0.6, 0.5;
    0.5, 0.7, 0.5;
    0.5, 0.8, 0.5;
    0.5, 0.9, 0.5;
    0.5, 1.0, 0.5;
    0.5, 1.1, 0.5];

fisTarget2 = evalfis(sparePartsFis,testOutside)
neuroFisTarget2 = evalfis(trainedFis,testOutside)
bar([fisTarget2,neuroFisTarget2]);
title("Neuro FIS Output vs FIS output")
xticklabels({'[0.5, 0.6, 0.5]','[0.5, 0.7, 0.5]','[0.5, 0.8, 0.5]','[0.5, 0.9, 0.5]','[0.5, 1.0, 0.5]','[0.5, 1.1, 0.5]'})
legend("FIS","NeuroFIS")

nexttile
testOutside = [0.5, 0.5, 0.5;
    1.0, 1.0, 1.0;
    -0.1 -0.1 -0.1;
    1.1 1.1 1.1;
    1.5 1.5 1.5;
    0.0 0.0 0.0];

fisTarget3 = evalfis(sparePartsFis,testOutside)
neuroFisTarget3 = evalfis(trainedFis,testOutside)
bar([fisTarget3,neuroFisTarget3]);
title("Neuro FIS Output vs FIS output")
xticklabels({'[0.5, 0.5, 0.5]','[1.0, 1.0, 1.0]','[-0.1, -0.1, -0.1]','[1.1, 1.1, 1.1]','[1.5, 1.5, 1.5]','[0.0, 0.0, 0.0]'})
legend("FIS","NeuroFIS")

nexttile
testOutside = [1.0, 1.0, 1.0;
    1.2, 1.2, 1.2;
    1.4, 1.4, 1.4;
    1.6, 1.6, 1.6;
    1.8, 1.8, 1.8;
    2.0, 2.0, 2.0];

fisTarget4 = evalfis(sparePartsFis,testOutside)
neuroFisTarget4 = evalfis(trainedFis,testOutside)
bar([fisTarget4,neuroFisTarget4]);
title("Neuro FIS Output vs FIS output")
xticklabels({'[1.0, 1.0, 1.0]','[1.2, 1.2, 1.2]','[1.4, 1.4, 1.4]','[1.6, 1.6, 1.6]','[1.8, 1.8, 1.8]','[2.0, 2.0, 2.0]'})
legend("FIS","NeuroFIS")

nexttile
testOutside = [0.2, 0.2, 0.2;
    0.0, 0.0, 0.0;
    -0.2, -0.2, -0.2;
    -0.4, -0.4, -0.4;
    -0.6, -0.6, -0.6;
    -0.8, -0.8, -0.8];

fisTarget5 = evalfis(sparePartsFis,testOutside)
neuroFisTarget5 = evalfis(trainedFis,testOutside)
bar([fisTarget5,neuroFisTarget5]);
title("Neuro FIS Output vs FIS output")
xticklabels({'[0.2, 0.2, 0.2]','[0.0, 0.0, 0.0]','[-0.2, -0.2, -0.2]','[-0.4, -0.4, -0.4]','[-0.6, -0.6, -0.6]','[-0.8, -0.8, -0.8]'})
legend("FIS","NeuroFIS")